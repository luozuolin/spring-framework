<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 目标对象 -->
    <bean id="cat" class="org.springframework.luozlspringtest.springsource.spring30.Cat"/>

    <!-- 切面类-->
    <bean id="catAspect" class="org.springframework.luozlspringtest.springsource.spring30.CatAspect"/>

    <!--AOP配置（一）-->
    <aop:config proxy-target-class="true">
        <!-- 切入点-->
        <aop:pointcut id="pointcut" expression="execution(* org.springframework.luozlspringtest.springsource.spring30..*.*(..)) and args(name,age)"/>
        <aop:aspect ref="catAspect" order="0">
            <!--前置增强，在切入点选择的方法之前执行-->
            <aop:before method="beforeAdvice" pointcut-ref="pointcut" arg-names="name,age"/>
            <!--后置异常增强，在切入点选择的方法抛出异常时执行-->
            <aop:after-throwing method="afterExceptionAdvice" pointcut-ref="pointcut" arg-names="name,age"/>
            <!--后置返回增强，在切入点选择的方法正常返回时执行-->
            <aop:after-returning method="afterReturningAdvice" pointcut-ref="pointcut" arg-names="name,age"/>
            <!--后置最终增强，在切入点选择的方法返回时执行，不管是正常返回还是抛出异常都执行-->
            <aop:after method="afterAdvice" pointcut-ref="pointcut" arg-names="name,age"/>
            <!--
                环绕增强，环绕着在切入点选择的连接点处的方法所执行的通知，可以决定目标方法是否执行，
                什么时候执行，执行时是否需要替换方法参数，执行完毕是否需要替换返回值
            -->
            <aop:around method="roundAdvice" pointcut-ref="pointcut" arg-names="p,name,age"/>
        </aop:aspect>
    </aop:config>
</beans>